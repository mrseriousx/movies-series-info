{"ast":null,"code":"import{SEARCH_MOVIE,FETCH_MOVIE,FETCH_MOVIES,LOADING}from'./types';import axios from'axios';import{APIKey}from'../APIKey';export var searchMovie=function searchMovie(text){return function(dispatch){dispatch({type:SEARCH_MOVIE,payload:text});};};export var fetchMovies=function fetchMovies(text){return function(dispatch){axios.get(\"http://www.omdbapi.com/?apikey=\".concat(APIKey,\"&s=\").concat(text)).then(function(response){return dispatch({type:FETCH_MOVIES,payload:response.data});}).catch(function(err){return console.log(err);});};};export var fetchMovie=function fetchMovie(id){return function(dispatch){axios.get(\"http://www.omdbapi.com/?apikey=\".concat(APIKey,\"&i=\").concat(id)).then(function(response){return dispatch({type:FETCH_MOVIE,payload:response.data});}).catch(function(err){return console.log(err);});};};export var setLoading=function setLoading(){return{type:LOADING};};","map":{"version":3,"sources":["/Users/haihuynh/Documents/WEB/Reactjs/movies-series-app/src/actions/searchActions.js"],"names":["SEARCH_MOVIE","FETCH_MOVIE","FETCH_MOVIES","LOADING","axios","APIKey","searchMovie","text","dispatch","type","payload","fetchMovies","get","then","response","data","catch","err","console","log","fetchMovie","id","setLoading"],"mappings":"AAEA,OAAQA,YAAR,CAAqBC,WAArB,CAAiCC,YAAjC,CAA8CC,OAA9C,KAA4D,SAA5D,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,MAAR,KAAqB,WAArB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,IAAI,QAAI,UAAAC,QAAQ,CAAG,CAC1CA,QAAQ,CAAC,CACLC,IAAI,CAAET,YADD,CAELU,OAAO,CAAEH,IAFJ,CAAD,CAAR,CAIH,CAL8B,EAAxB,CAQP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAJ,IAAI,QAAI,UAAAC,QAAQ,CAAG,CAC1CJ,KAAK,CAACQ,GAAN,0CAA4CP,MAA5C,eAAwDE,IAAxD,GACKM,IADL,CACU,SAAAC,QAAQ,QAAIN,CAAAA,QAAQ,CAAC,CACvBC,IAAI,CAACP,YADkB,CAEvBQ,OAAO,CAACI,QAAQ,CAACC,IAFM,CAAD,CAAZ,EADlB,EAKKC,KALL,CAKW,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EALd,EAMH,CAP8B,EAAxB,CAUP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,EAAE,QAAI,UAAAb,QAAQ,CAAG,CACvCJ,KAAK,CAACQ,GAAN,0CAA4CP,MAA5C,eAAwDgB,EAAxD,GACKR,IADL,CACU,SAAAC,QAAQ,QAAIN,CAAAA,QAAQ,CAAC,CACvBC,IAAI,CAACR,WADkB,CAEvBS,OAAO,CAACI,QAAQ,CAACC,IAFM,CAAD,CAAZ,EADlB,EAKKC,KALL,CAKW,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EALd,EAMH,CAP2B,EAArB,CAUP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAK,CAC3B,MAAO,CACHb,IAAI,CAAEN,OADH,CAAP,CAGH,CAJM","sourcesContent":["\n\nimport {SEARCH_MOVIE,FETCH_MOVIE,FETCH_MOVIES,LOADING} from './types';\n\nimport axios from 'axios';\n\nimport {APIKey} from '../APIKey';\n\nexport const searchMovie = text => dispatch =>{\n    dispatch({\n        type: SEARCH_MOVIE,\n        payload: text\n    })\n}\n\n\nexport const fetchMovies = text => dispatch =>{\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\n        .then(response => dispatch({\n            type:FETCH_MOVIES,\n            payload:response.data\n        }) )\n        .catch(err => console.log(err))\n}\n\n\nexport const fetchMovie = id => dispatch =>{\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\n        .then(response => dispatch({\n            type:FETCH_MOVIE,\n            payload:response.data\n        }) )\n        .catch(err => console.log(err))\n};\n\n\nexport const setLoading = () =>{\n    return {\n        type: LOADING\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}